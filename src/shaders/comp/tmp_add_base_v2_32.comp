#version 450
#extension GL_EXT_scalar_block_layout : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable
#extension GL_KHR_shader_subgroup_ballot : enable


#ifndef WARP_SIZE
#define WARP_SIZE 32
#endif

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants { uint numElements; } push;

layout(set = 0, binding = 0) buffer OutputBuffer { uint data[]; } u_output;
layout(set = 0, binding = 1) buffer PrefixBuffer { uint prefixes[]; };

void main() {
    const uint globalID = gl_WorkGroupID.x * 256 + gl_LocalInvocationID.x;
    if (globalID >= push.numElements) return;

    const uint blockID = gl_WorkGroupID.x;
    uint base = prefixes[blockID];
    
    // Subgroup-optimized broadcast
    base = subgroupBroadcastFirst(base);
    u_output.data[globalID] += base;
}